[/==============================================================================
    Copyright (C) 2014 Thomas Heller
    Copyright (C) 2007-2013 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:bgq_installation How to Install __hpx__ on BlueGene/Q]

[teletype]
So far we only support BGClang for compiling __hpx__ on the BlueGene/Q.

* Check if BGClang is available on your installation. If not obtain and install a copy
   from the `BGClang trac page <https://trac.alcf.anl.gov/projects/llvm-bgq>`_

* Build (and install) a recent version of __hwloc_downloads__
   With the following commands:

``
      ./configure \
        --host=powerpc64-bgq-linux \
        --prefix=$HOME/install/hwloc \
        --disable-shared \
        --enable-static \
        CPPFLAGS='-I/bgsys/drivers/ppcfloor -I/bgsys/drivers/ppcfloor/spi/include/kernel/cnk/'
      make
      make install
``

* Build (and install) a recent version of Boost, using BGClang::
   To build Boost with BGClang, you'll need to set up the following in your Boost
   `~/user-config.jam` file:

``
      # user-config.jam (put this file into your home directory)
      using clang
        :
        : bgclang++11
        :
        ;
``

You can then use this as your build command:

``
      ./bootstrap.sh
      ./b2 --build-dir=/tmp/build-boost --layout=versioned toolset=clang -j12
``

* Clone the master __hpx__ git repository (or a stable tag):

``
    git clone git://github.com/STEllAR-GROUP/hpx.git
``

* Generate the __hpx__ buildfiles using cmake:

``
    cmake -DHPX_PLATFORM=BlueGeneQ \
            -CMAKE_TOOLCHAIN_FILE=/path/to/hpx/cmake/toolchains/BGQ.cmake \
            -DCMAKE_CXX_COMPILER=bgclang++11 \
            -DMPI_CXX_COMPILER=mpiclang++11 \
            -DHWLOC_ROOT=/path/to/hwloc/installation \
            -DBOOST_ROOT=/path/to/boost \
            -DHPX_MALLOC=system \
            /path/to/hpx
``

* To complete the build and install __hpx__:

``
    make -j24
    make install
``

   This will build and install the essential core components of __hpx__ only. Use:

``
    make -j24 examples
    make -j24 install
``

   to build and install the examples.

[c++]
[endsect] [/ How to Install __hpx__ on BlueGene/Q]

