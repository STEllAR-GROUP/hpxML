Namespce Parselset

API Component:		Comments:
example_function	this does bla...
example_class		this class belongs in **** namespace...
			I love this class...
example_module		bla bla bla....




namespace detail
{
	struct call_for_each;
}

namespace policies
{
    struct global_parcelhandler_queue : parcelhandler_queue_base;
}

namespace server
{
	class parcelport_queue;
	class parcelport_server_connection;

	struct parcelhandler_queue_base; // ?? not implemented ??

	namespace policies
	{
		struct global_parcelhandler_queue;

		typedef global_parcelhandler_queue parcelhandler_queue;
	}
}

namespace server
{
    /// Represents a single parcelport_connection from a client.
    class parcelport_connection
      : public boost::enable_shared_from_this<parcelport_connection>,
        private boost::noncopyable;
}

class HPX_API_EXPORT parcel;

    /// The parcelport is the lowest possible representation of the parcelset
    /// inside a locality. It provides the minimal functionality to send and
    /// to receive parcels.
class HPX_EXPORT parcelport : boost::noncopyable


    /// Represents a single parcelport_connection from a client.
class parcelport_connection
      : public boost::enable_shared_from_this<parcelport_connection>,
        private boost::noncopyable

    /// The \a parcelhandler is the representation of the parcelset inside a
    /// locality. It is built on top of a single parcelport. Several
    /// parcelhandler's may be connected to a single parcelport.
class HPX_EXPORT parcelhandler : boost::noncopyable

struct parcelhandler_queue_base;

struct wait_for_put_parcel;
