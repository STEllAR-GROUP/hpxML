[/==============================================================================
    Copyright (C) 2007-2016 Hartmut Kaiser
    Copyright (c) 2016 Adrian Serio

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:whats_new What's New]

[//////////////////////////////////////////////////////////////////////////////]
[section:hpx_1_0_0 __hpx__ V1.0]

[heading General Changes]

Here are some of the main highlights and changes for this release (in no
particular order):

* Added the facility `hpx::split_future` which allows to convert a
  `future<tuple<Ts...>>` into a `tuple<future<Ts>...>`. This functionality is
  not available when compiling __hpx__ with VS2012.
* Added a new type of performance counter which allows to return a list of
  values for each invocation. We also added a first counter of this type which
  collects a histogram of the times between parcels being created.
* Added new LCOs: `hpx::lcos::channel` and `hpx::lcos::local::channel` which
  are very similar to the well known channel constructs used in the Go language.
* Added new performance counters reporting the amount of data handled by the
  networking layer on a action-by-action basis (please see [pr 2289] for more
  details).
* Added a new facility `hpx::lcos::barrier`, replacing the equally named older
  one. The new facility has a slightly changed API and is much more efficient.
  Most notable, the new facility exposes a (global) function
  `hpx::lcos::barrier::synchronize()` which represents a global barrier across
  all localities.
* We have started to add support for vectorization to our parallel algorithm
  implementations. This support depends on using an external library, currently
  either __vc__ or __boost_simd__. Please see [issue 2333] for a list of
  currently supported algorithms. This is an experimental feature and its
  implementation and/or API might change in the future. Please see this
  [@http://stellar-group.org/2016/09/vectorized-cpp-parallel-algorithms-with-hpx/ blog-post]
  for more information.
* All execution policies and related classes have been renamed to be consistent
  with the naming changes applied for C++17. All policies now live in the
  namespace `hpx::parallel::execution`. The ols names can be still enabled
  at configure time by specifying `-DHPX_WITH_EXECUTION_POLICY_COMPATIBILITY=On`
  to __cmake__.

[heading Breaking Changes]

* We have dropped support for the gcc compiler versions V4.6 and 4.7. The
  minimal gcc version we now test on is gcc V4.8.
* We have removed (default) support for `boost::chrono` in interfaces, uses of
  it have been replaced with `std::chrono`. This facility can be still enabled
  at configure time by specifying `-DHPX_WITH_BOOST_CHRONO_COMPATIBILITY=On`
  to __cmake__.

[heading Bug Fixes (Closed Tickets)]

Here is a list of the important tickets we closed for this release.

* [pr    2372] - Barrier Fixes
* [issue 2370] - Can't wait on a wrapped future
* [pr    2369] - Fixing stable_partition
* [pr    2367] - Fixing find_prefixes for Windows platforms
* [pr    2363] - Fix papi
* [pr    2362] - Adding missing macros for new non-direct actions
* [pr    2361] - Improve cmake output to help debug compiler incompatibility check
* [pr    2360] - Fixing race condition in condition_variable
* [pr    2359] - Fixing shutdown when parcels are still in flight
* [issue 2357] - failed to insert console_print_action into typename_to_id_t registry
* [pr    2356] - Fixing return type of get_iterator_tuple
* [pr    2355] - Fixing compilation against Boost 1 62
* [pr    2354] - Adding serialization for mask_type if CPU_COUNT > 64
* [issue 2352] - Compile errors when using intel 17 beta (for KNL) on edison
* [pr    2351] - Fix function vtable get_function_address implementation
* [issue 2350] - Build failure - master branch (4de09f5) with Intel Compiler v17
* [pr    2349] - Enabling zero-copy serialization support for std::vector<>
* [pr    2348] - Adding test to verify #2334 is fixed
* [pr    2347] - Bug fixes for hpx.compute and hpx::lcos::channel
* [pr    2346] - Removing cmake "find" files that are in the APEX cmake Modules
* [pr    2345] - Implemented parallel::stable_partition
* [pr    2344] - Making hpx::lcos::channel usable with basename registration
* [pr    2343] - Fix a couple of examples that failed to compile after recent
                 api changes
* [issue 2342] - Enabling APEX causes link errors
* [pr    2341] - Removing cmake "find" files that are in the APEX cmake Modules
* [pr    2340] - Implemented all existing datapar algorithms using Boost.SIMD
* [pr    2339] - Fixing 2338
* [pr    2338] - Possible race in sliding semaphore
* [pr    2337] - Adjust osu_latency test to measure window_size parcels in flight at once
* [pr    2336] - Allowing remote direct actions to be executed without spawning a task
* [pr    2335] - Making sure multiple components are properly initialized from
                 arguments
* [issue 2334] - Cannot construct component with large vector on a remote
                 locality
* [pr    2332] - Fixing hpx::lcos::local::barrier
* [pr    2331] - Updating APEX support to include OTF2
* [pr    2330] - Support for data-parallelism for parallel algorithms
* [pr    2328] - fix LibGeoDecomp builds with HPX + GCC 5.3.0 + CUDA 8RC
* [pr    2326] - Making scan_partitioner work (for now)
* [issue 2323] - Constructing a vector of components only correctly initializes
                 the first component
* [pr    2322] - Fix problems that bubbled up after merging #2278
* [pr    2321] - Scalable barrier
* [pr    2320] - Std flag fixes
* [issue 2319] - -std=c++14 and -std=c++1y with Intel can't build recent Boost
                 builds due to insufficient C++14 support; don't enable these
                 flags by default for Intel
* [pr    2318] - Improve handling of --hpx:bind=<bind-spec>
* [pr    2317] - Making sure command line warnings are printed once only
* [pr    2316] - Fixing command line handling for default bind mode
* [pr    2315] - Set id_retrieved if set_id is present
* [issue 2314] - Warning for requested/allocated thread discrepancy is printed
                 twice
* [issue 2313] - --hpx:print-bind doesn't work with --hpx:pu-step
* [issue 2312] - --hpx:bind range specifier restrictions are overly restrictive
* [issue 2311] - hpx_0.9.99 out of project build fails
* [pr    2310] - Simplify function registration
* [pr    2309] - Spelling and grammar revisions in documentation (and some code)
* [pr    2306] - Correct minor typo in the documentation
* [pr    2305] - Cleaning up and fixing parcel coalescing
* [pr    2304] - Inspect checks for stream related includes
* [pr    2303] - Add functionality allowing to enumerate threads of given state
* [pr    2301] - Algorithm overloads fix for VS2013
* [pr    2300] - Use <cstdint>, add inspect checks
* [pr    2299] - Replace boost::[c]ref with std::[c]ref, add inspect checks
* [pr    2297] - Fixing compilation with no hw_loc
* [pr    2296] - Hpx compute
* [pr    2295] - Making sure for_loop(execution::par, 0, N, ...) is actually executed in
                 parallel
* [pr    2294] - Throwing exceptions if the runtime is not up and running
* [pr    2293] - Removing unused parcel port code
* [pr    2292] - Refactor function vtables
* [pr    2291] - Fixing 2286
* [pr    2290] - Simplify algorithm overloads
* [pr    2289] - Adding performance counters reporting parcel related data on a
                 per-action basis
* [issue 2288] - Remove dormant parcelports
* [issue 2286] - adjustments to parcel handling to support parcelports that do
                 not need a connection cache
* [pr    2285] - add CMake option to disable package export
* [pr    2283] - Add more inspect checks for use of deprecated components
* [issue 2282] - Arithmetic exception in executor static chunker
* [issue 2281] - For loop doesn't parallelize
* [pr    2280] - Fixing 2277: build failure with PAPI
* [pr    2279] - Child vs parent stealing
* [issue 2277] - master branch build failure (53c5b4f) with papi
* [pr    2276] - Compile time launch policies
* [pr    2275] - Replace boost::chrono with std::chrono in interfaces
* [pr    2274] - Replace most uses of Boost.Assign with initializer list
* [pr    2273] - Fixed typos
* [pr    2272] - Inspect checks
* [pr    2270] - Adding test verifying -Ihpx.os_threads=all
* [pr    2269] - Added inspect check for now obsolete boost type traits
* [pr    2268] - Moving more code into source files
* [issue 2267] - Add inspect support to deprecate Boost.TypeTraits
* [pr    2265] - Adding channel LCO
* [pr    2264] - Make support for std::ref mandatory
* [pr    2263] - Constrain tuple_member forwarding constructor
* [issue 2262] - Test hpx.os_threads=all
* [issue 2261] - OS X: Error: no matching constructor for initialization of
                 'hpx::lcos::local::condition_variable_any'
* [issue 2260] - Make support for std::ref mandatory
* [pr    2259] - Remove most of Boost.MPL, Boost.EnableIf and Boost.TypeTraits
* [pr    2258] - Fixing #2256
* [pr    2257] - Fixing launch process
* [issue 2256] - Actions are not registered if not invoked
* [pr    2255] - Coalescing histogram
* [pr    2254] - Silence explicit initialization in copy-constructor warnings
* [pr    2253] - Drop support for GCC 4.6 and 4.7
* [pr    2252] - Prepare V1.0
* [pr    2251] - Convert to 0.9.99
* [pr    2249] - Adding iterator_facade and iterator_adaptor
* [issue 2248] - Need a feature to yield to a new task immediately
* [pr    2246] - Adding split_future
* [pr    2245] - Add an example for handing over a component instance to
                 a dynamically launched locality
* [issue 2243] - Add example demonstrating AGAS symbolic name registration
* [issue 2242] - pkgconfig test broken on CentOS 7 / Boost 1.61
* [issue 2241] - Compilation error for partitioned vector in hpx_compute branch
* [pr    2240] - Fixing termination detection on one locality
* [issue 2239] - Create a new facility lcos::split_all
* [issue 2236] - hpx::cout vs. std::cout
* [pr    2232] - Implement local-only primary namespace service
* [issue 2147] - would like to know how much data is being routed by particular
                 actions
* [issue 1754] - Running with TCP parcelport causes immediate crash or freeze
* [issue 1655] - Enable zip_iterator to be used with Boost traversal iterator
                 categories
* [issue 1591] - Optimize AGAS for shared memory only operation
* [issue  668] - Implement ispc task interface

[endsect]

[/////////////////////////////////////////////////////////////////////////////]
[include whats_new_previous.qbk]

[endsect] [/ What's New]

[/Proofread by:]
[/Adrian Serio 6-28-16]
[/Patricia Grubel 3-20-15]
