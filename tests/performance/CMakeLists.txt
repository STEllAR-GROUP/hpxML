# Copyright (c) 2011 Bryce Adelstein-Lelbach
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

set(benchmarks
    boost_tls
    native_tls
    hpx_tls
    delay_baseline
    pxthread
   )

set(boost_tls_FLAGS NOLIBS DEPENDENCIES ${BOOST_program_options_LIBRARY}
                                        ${BOOST_thread_LIBRARY})

set(native_tls_FLAGS NOLIBS DEPENDENCIES ${BOOST_program_options_LIBRARY}
                                         ${BOOST_thread_LIBRARY})

set(hpx_tls_FLAGS NOLIBS DEPENDENCIES ${BOOST_program_options_LIBRARY}
                                      ${BOOST_thread_LIBRARY})

set(delay_baseline_FLAGS DEPENDENCIES iostreams_component)

set(pxthread_FLAGS DEPENDENCIES iostreams_component)

if(HPX_CXX11_LAMBDAS)
  set(benchmarks ${benchmarks}
      eager_future
     )

  set(eager_future_FLAGS DEPENDENCIES iostreams_component)
endif()

foreach(benchmark ${benchmarks})
  set(sources
      ${benchmark}.cpp)

  source_group("Source Files" FILES ${sources})

  # add example executable
  add_hpx_executable(${benchmark}
                     SOURCES ${sources}
                     ${${benchmark}_FLAGS})

  # add a custom target for this example
  add_hpx_pseudo_target(tests.performance.${benchmark})

  # make pseudo-targets depend on master pseudo-target
  add_hpx_pseudo_dependencies(tests.performance
                              tests.performance.${benchmark})

  # add dependencies to pseudo-target
  add_hpx_pseudo_dependencies(tests.performance.${benchmark}
                              ${benchmark}_exe)
endforeach()


add_hpx_executable(util.function
                   SOURCES util/function.cpp
                   ${util_function_FLAGS})

add_hpx_pseudo_target(tests.performance.util.function)

add_hpx_pseudo_dependencies(tests.performance
                              tests.performance.util.function)
add_hpx_pseudo_dependencies(tests.performance.util.function
                              util.function_exe)
