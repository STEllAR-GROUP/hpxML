# Copyright (c) 2015 Hartmut Kaiser
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# collect a list of all header files in the source tree
file(GLOB_RECURSE headers "${PROJECT_SOURCE_DIR}/hpx/*hpp")

set(all_headers)

# for each of the found headers, generate a test executable
foreach(header ${headers})

  # skip all headers in directories containing 'detail'
  set(detail_pos -1)
  string(FIND "${header}" "detail" detail_pos)

  if(${detail_pos} EQUAL -1)
    # extract relative path of header
    string(REGEX REPLACE "${PROJECT_SOURCE_DIR}/hpx/" "" relpath "${header}")

    # .hpp --> .cpp
    string(REGEX REPLACE ".hpp" ".cpp" full_test_file "${relpath}")

    # remove extension, '/' --> '_'
    string(REGEX REPLACE ".hpp" "_hpp" test_file "${relpath}")
    string(REGEX REPLACE "/" "_" test_name "${test_file}")

    # generate the test
    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${full_test_file}
      "#include <hpx/${relpath}>\n"
      "int main() { return 0; }\n")

    set(all_headers ${all_headers} "#include <hpx/${relpath}>\n")

    get_filename_component(header_dir "${relpath}" DIRECTORY)

    # add compile only test
    add_hpx_headers_compile_test(
      "headers"
      ${test_name}
      SOURCES "${CMAKE_CURRENT_BINARY_DIR}/${full_test_file}"
      SOURCE_ROOT "${CMAKE_CURRENT_BINARY_DIR}/${header_dir}"
      FOLDER "Tests/Headers/${header_dir}")

    # add a custom target for this example
    add_hpx_pseudo_target(tests.headers.${test_name})

    # make pseudo-targets depend on master pseudo-target
    add_hpx_pseudo_dependencies(tests.headers tests.headers.${test_name})

    # add dependencies to pseudo-target
    add_hpx_pseudo_dependencies(tests.headers.${test_name} "${test_name}_exe")
  endif()

endforeach()

# generate a test executable project including all found header files
set(test_name "all_headers")
set(all_headers_test_name "${CMAKE_CURRENT_BINARY_DIR}/${test_name}.cpp")
file(WRITE ${all_headers_test_name}
  ${all_headers}
  "int main() { return 0; }\n")

add_hpx_headers_compile_test(
  "all_headers"
  ${test_name}
  SOURCES "${all_headers_test_name}"
  SOURCE_ROOT "${CMAKE_CURRENT_BINARY_DIR}"
  FOLDER "Tests/Headers")

# add a custom target for this example
add_hpx_pseudo_target(tests.headers.${test_name})

# make pseudo-targets depend on master pseudo-target
add_hpx_pseudo_dependencies(tests.headers tests.headers.${test_name})

# add dependencies to pseudo-target
add_hpx_pseudo_dependencies(tests.headers.${test_name} "${test_name}_exe")
