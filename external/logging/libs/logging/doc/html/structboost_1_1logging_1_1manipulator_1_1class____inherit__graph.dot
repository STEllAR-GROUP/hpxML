digraph G
{
  edge [fontname="FreeSans.ttf",fontsize=10,labelfontname="FreeSans.ttf",labelfontsize=10];
  node [fontname="FreeSans.ttf",fontsize=10,shape=record];
  rankdir=LR;
  Node1 [label="boost::logging::manipulator::class_\< type, op_e, base_type \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="firebrick4",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node2 [label="boost::logging::op_equal::same_type_op_equal\< unsigned int \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1op__equal_1_1same__type__op__equal.html",tooltip="Implements operator==, which compares two objects. If they have the same type, it..."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node3 [label="boost::logging::op_equal::same_type_op_equal_base",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1op__equal_1_1same__type__op__equal__base.html",tooltip="Base class when you want to implement operator== that will compare based on type..."];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node4 [label="boost::logging::destination::class_\< unsigned int, op_e, base_type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1destination_1_1class__.html",tooltip="Use this when implementing your own destination class."];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node5 [label="boost::logging::destination::class_\< as_xml, destination::implement_op_equal::has_context \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1destination_1_1class__.html"];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node6 [label="boost::logging::formatter::class_\< unsigned int, op_e, base_type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1formatter_1_1class__.html",tooltip="Use this when implementing your own formatter class."];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize=10,style="solid",fontname="FreeSans.ttf"];
  Node7 [label="boost::logging::formatter::class_\< secs_since_start, formatter::implement_op_equal::no_context \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structboost_1_1logging_1_1formatter_1_1class__.html"];
}
